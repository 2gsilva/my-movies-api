name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
  
    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Install dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build

    - name: Test
      run: dotnet test

    - name: Publish project
      run: dotnet publish -c Release -o dist

    - name: Archive artifacts
      uses: actions/upload-artifact@v3
      with:
        name: my-movie-api-artifact
        path: dist/
  
  build-docker:
  
    runs-on: ubuntu-latest
    
    needs: build

    steps:
    - uses: actions/checkout@v3

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: my-movie-api-artifact
        path: dist/
  
    # - name: Set the Docker image tag
      # run: echo "DOCKER_IMAGE_TAG=$(date +%s)" >> $GITHUB_ENV

    - name: Build the Docker image
      run: docker build -f "Dockerfile" -t my-movies-api:latest dist/

    - name: Login to Docker Hub
      run: docker login -u 2gsilva -p ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set tag in Docker Hub
      run: docker tag my-movies-api:latest 2gsilva/my-movies-api:latest
     # run: docker tag my-movies-api:$DOCKER_IMAGE_TAG 2gsilva/my-movies-api:$DOCKER_IMAGE_TAG
     
    - name: Publish Image to Docker Hub
      run: docker push 2gsilva/my-movies-api:latest
      #run: docker push 2gsilva/my-movies-api:$DOCKER_IMAGE_TAG
